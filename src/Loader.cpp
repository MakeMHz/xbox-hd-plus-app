#include <hal/debug.h>
#include <hal/video.h>
#include <windows.h>
#include <stdio.h>
#include <string.h>

const unsigned char d8003026F[857] = {
    0x55, 0x89, 0xE5, 0x8B, 0x45, 0x0C, 0x50, 0x6A, 0x01, 0x8A, 0x4D, 0x08, 0x51, 0x68, 0x88, 0x00, 0x00,
    0x00, 0xE8, 0xBD, 0x44, 0xFE, 0xFF, 0x8B, 0x55, 0x0C, 0xC1, 0xEA, 0x10, 0x52, 0x6A, 0x01, 0x0F,
    0xB6, 0x45, 0x08, 0x83, 0xC0, 0x02, 0x50, 0x68, 0x88, 0x00, 0x00, 0x00, 0xE8, 0xA2, 0x44, 0xFE,
    0xFF, 0x5D, 0xC2, 0x08, 0x00, 0x55, 0x89, 0xE5, 0x0F, 0xB6, 0x45, 0x0C, 0x50, 0x6A, 0x00, 0x8A,
    0x4D, 0x08, 0x51, 0x68, 0x88, 0x00, 0x00, 0x00, 0xE8, 0x86, 0x44, 0xFE, 0xFF, 0x5D, 0xC2, 0x08,
    0x00, 0x55, 0x89, 0xE5, 0x8B, 0x45, 0x0C, 0x50, 0x6A, 0x00, 0x8A, 0x4D, 0x08, 0x51, 0x68, 0x86,
    0x00, 0x00, 0x00, 0xE8, 0x19, 0x43, 0xFE, 0xFF, 0x5D, 0xC2, 0x08, 0x00, 0x55, 0x89, 0xE5, 0x83,
    0xEC, 0x0C, 0xC7, 0x45, 0xFC, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xF4, 0x00, 0x00, 0x00, 0x00,
    0xEB, 0x09, 0x8B, 0x45, 0xF4, 0x83, 0xC0, 0x01, 0x89, 0x45, 0xF4, 0x83, 0x7D, 0xF4, 0x04, 0x73,
    0x24, 0x8D, 0x4D, 0xF8, 0x51, 0x0F, 0xB6, 0x55, 0x08, 0x03, 0x55, 0xF4, 0x52, 0xE8, 0xAF, 0xFF,
    0xFF, 0xFF, 0x0B, 0x45, 0xFC, 0x89, 0x45, 0xFC, 0x8B, 0x45, 0x0C, 0x03, 0x45, 0xF4, 0x8A, 0x4D,
    0xF8, 0x88, 0x08, 0xEB, 0xCD, 0x8B, 0x45, 0xFC, 0x89, 0xEC, 0x5D, 0xC2, 0x08, 0x00, 0x6A, 0x00,
    0x6A, 0x00, 0xE8, 0x6E, 0xFF, 0xFF, 0xFF, 0x89, 0x45, 0xE0, 0x85, 0xC0, 0x75, 0x7D, 0xFF, 0x75,
    0x10, 0x6A, 0x3E, 0xE8, 0x27, 0xFF, 0xFF, 0xFF, 0x8B, 0x4D, 0x10, 0x09, 0xC9, 0x75, 0x05, 0xB9,
    0x01, 0x07, 0x07, 0x88, 0x78, 0x0F, 0xF6, 0xC5, 0x01, 0xB9, 0x01, 0x08, 0x08, 0x88, 0x74, 0x05,
    0xB9, 0x01, 0x07, 0x07, 0x88, 0x89, 0x4D, 0x10, 0xFF, 0x35, 0x6C, 0xC3, 0x03, 0x80, 0x6A, 0x50,
    0xE8, 0x30, 0xFF, 0xFF, 0xFF, 0xFF, 0x35, 0x58, 0xC1, 0x03, 0x80, 0x6A, 0x51, 0xE8, 0x23, 0xFF,
    0xFF, 0xFF, 0x68, 0x18, 0x01, 0x01, 0x00, 0xE8, 0xBE, 0xE1, 0xFE, 0xFF, 0x85, 0xC0, 0xB8, 0xFF,
    0xFF, 0xFF, 0xFF, 0x74, 0x0A, 0xB8, 0x18, 0x01, 0x01, 0x00, 0x8B, 0x00, 0x8B, 0x40, 0x08, 0x50,
    0x6A, 0x52, 0xE8, 0xC8, 0xFE, 0xFF, 0xFF, 0x90, 0x90, 0x90, 0x90, 0x90, 0xE9, 0xAE, 0x00, 0x00,
    0x00, 0x68, 0xA0, 0x86, 0x01, 0x00, 0xE8, 0x75, 0x51, 0xFE, 0xFF, 0x8A, 0x15, 0x6C, 0xC3, 0x03,
    0x80, 0xE9, 0x82, 0x0B, 0x00, 0x00, 0x8B, 0x4D, 0xE0, 0x85, 0xC9, 0x8B, 0x4D, 0x08, 0x75, 0x21,
    0x50, 0x51, 0x52, 0xB8, 0x98, 0xC3, 0x03, 0x80, 0x8B, 0x00, 0x29, 0xC1, 0x83, 0xC1, 0x68, 0x8D,
    0x45, 0xDC, 0x50, 0x51, 0xE8, 0xD8, 0xFE, 0xFF, 0xFF, 0x5A, 0x59, 0x58, 0x8A, 0x55, 0xDC, 0xEB,
    0x02, 0x8A, 0x10, 0x8A, 0x09, 0x80, 0xF9, 0x13, 0xE9, 0xD6, 0x10, 0x00, 0x00, 0x8B, 0x5D, 0xE0,
    0x85, 0xDB, 0x75, 0x1C, 0x50, 0x51, 0x52, 0xB8, 0x78, 0xC3, 0x03, 0x80, 0x8B, 0x00, 0x29, 0xC2,
    0x8D, 0x45, 0xDC, 0x50, 0x52, 0xE8, 0xC2, 0xFE, 0xFF, 0xFF, 0x5A, 0x59, 0x58, 0x8B, 0x7D, 0xDC,
    0x8B, 0x1A, 0x89, 0x3C, 0x1E, 0xE9, 0xF3, 0x0F, 0x00, 0x00, 0x8B, 0x5D, 0xE0, 0x85, 0xDB, 0x75,
    0x19, 0x50, 0x51, 0x52, 0x8D, 0x45, 0xDC, 0x50, 0x68, 0x8A, 0x00, 0x00, 0x00, 0xE8, 0x9A, 0xFE,
    0xFF, 0xFF, 0x5A, 0x59, 0x58, 0x8B, 0x45, 0xDC, 0xEB, 0x07, 0x8B, 0x04, 0x85, 0xA0, 0x6E, 0x03,
    0x80, 0xE9, 0xFB, 0x10, 0x00, 0x00, 0x48, 0x44, 0x4D, 0x49, 0x6B, 0x76, 0x01, 0x04, 0x03, 0xFF,
    0x75, 0x10, 0x6A, 0x42, 0xE8, 0x06, 0xFE, 0xFF, 0xFF, 0x8D, 0x45, 0x10, 0x50, 0x68, 0x42, 0x00,
    0x00, 0x00, 0xE8, 0x49, 0x00, 0x00, 0x00, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0xE9, 0x2C, 0xFF, 0xFF, 0xFF, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x55, 0x89, 0xE5, 0x8B, 0x45, 0x0C, 0x50, 0x6A, 0x00, 0x8A, 0x4D,
    0x08, 0x51, 0x68, 0x88, 0x00, 0x00, 0x00, 0xE8, 0x35, 0x41, 0xFE, 0xFF, 0x5D, 0xC2, 0x08, 0x00,
    0x55, 0x89, 0xE5, 0x83, 0xEC, 0x0C, 0xC7, 0x45, 0xFC, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xF4,
    0x00, 0x00, 0x00, 0x00, 0xEB, 0x09, 0x8B, 0x45, 0xF4, 0x83, 0xC0, 0x01, 0x89, 0x45, 0xF4, 0x83,
    0x7D, 0xF4, 0x04, 0x73, 0x24, 0x8D, 0x4D, 0xF8, 0x51, 0x0F, 0xB6, 0x55, 0x08, 0x03, 0x55, 0xF4,
    0x52, 0xE8, 0xAF, 0xFF, 0xFF, 0xFF, 0x0B, 0x45, 0xFC, 0x89, 0x45, 0xFC, 0x8B, 0x45, 0x0C, 0x03,
    0x45, 0xF4, 0x8A, 0x4D, 0xF8, 0x88, 0x08, 0xEB, 0xCD, 0x8B, 0x45, 0xFC, 0x89, 0xEC, 0x5D, 0xC2,
    0x08, 0x00, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90
};

const unsigned char d80030F42[22] = {
    0x24, 0xE9, 0xE6, 0xF3, 0xFF, 0xFF, 0x8B, 0x4D, 0x10, 0x85, 0xC9, 0x75, 0x09, 0xB9, 0x01, 0x01,
    0x01, 0x0F, 0x89, 0x4D, 0x10, 0x90
};
const unsigned char d80031418[8] = {
    0xE9, 0xE0, 0xEF, 0xFF, 0xFF, 0x83, 0xC0, 0x04
};

const unsigned char d800314C9[10] = {
    0xE9, 0xF8, 0xEE, 0xFF, 0xFF, 0x90, 0x90, 0x90, 0x90, 0x90
};

const unsigned char d8003154A[7] = {
    0xE9, 0xDB, 0xEE, 0xFF, 0xFF, 0x90, 0x90
};

const unsigned char d8002F08C[5] = { 0xE8, 0xDC, 0x01, 0x00, 0x00 };
const unsigned char d8002F09E[5] = { 0xE8, 0xCA, 0x01, 0x00, 0x00 };
const unsigned char d8002F886[5] = { 0xE8, 0xE2, 0xF9, 0xFF, 0xFF };
const unsigned char d8002F8BD[5] = { 0xE8, 0xAB, 0xF9, 0xFF, 0xFF };

void write_patch(const char unsigned *data, void *address, uint32_t size) {
    uint32_t oldCR0;

    _asm {
        mov eax, cr0
        mov oldCR0, eax
        and eax, 0FFFEFFFFh
        mov cr0, eax
    }

    memcpy(address, data, size);

    _asm {
        mov eax, oldCR0
        mov cr0, eax
    }
}


int main_loader(void)
{
    //XVideoSetMode(640, 480, 32, REFRESH_DEFAULT);
/*
    debugPrint("Loading XboxHD+\n");
    debugPrint("Detecting kernel\n");
    debugPrint("Applying patches\n");
    Sleep(2000);
*/
    write_patch(d8003026F, (void *)0x8003026F, sizeof(d8003026F));
    write_patch(d80030F42, (void *)0x80030F42, sizeof(d80030F42));
    write_patch(d80031418, (void *)0x80031418, sizeof(d80031418));
    write_patch(d800314C9, (void *)0x800314C9, sizeof(d800314C9));
    write_patch(d8003154A, (void *)0x8003154A, sizeof(d8003154A));

    // Restore
    write_patch(d8002F08C, (void *)0x8002F08C, sizeof(d8002F08C));
    write_patch(d8002F09E, (void *)0x8002F09E, sizeof(d8002F09E));
    write_patch(d8002F886, (void *)0x8002F886, sizeof(d8002F886));
    write_patch(d8002F8BD, (void *)0x8002F8BD, sizeof(d8002F8BD));

    //HalReturnToFirmware(HalMaximumRoutine);

    return 0;
}
